class Plotter::Parser

rule
  document
    : operation_list { result = Node::Document.new(parts: Array(val[0])) }

  operation_list
    : operation_list operation { result = Array(val[0]) + Array(val[1]) }
    | operation

  operation
    : operation_type name left_bracket field_list right_bracket { result = Node::OperationDefinition.new(operation_type: val[0], name: val[1], selections: Array(val[3])) }

  # TODO: Figure out how to restrict what values this can be:
  operation_type
    : name

  field_list
    : field comma field_list { result = Array(val[0]) + Array(val[2]) }
    | field field_list { result = Array(val[0]) + Array(val[1]) }
    | field

  field
    : name left_bracket field_list right_bracket { result = Node::Field.new(name: val[0], selections: Array(val[2])) }
    | fragment_name { result = Node::FragmentSpread.new(name: val[0]) }
    | name { result = Node::Field.new(name: val[0]) }

---- header ----
require File.dirname(__FILE__) + '/parser.rex.rb'

---- inner ----

def self.parse(sql)
  new.scan_str(sql)
end
